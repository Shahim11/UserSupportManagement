@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using UserSupportManagement.Constants
@model IEnumerable<UserSupportManagement.Models.Problem>

@{
    ViewData["Title"] = "Index";
}

@*<h1>Index</h1>*@

<div class="createbutton">
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.Create)).Result.Succeeded)
    {
        <a class="btn btn-primary mb-3 text-end" asp-action="Create"><i class="fa-solid fa-circle-plus"></i> Create New</a>
    }
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProblemType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StatusType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProblemName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProblemDetails)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedBy)
            </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProblemType.ProblemTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StatusType.StatusTypeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProblemName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProblemDetails)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedBy)
            </td>*@
            <td class="text-right">
                <div class="btn-group">
                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Action
                    </button>
                    <div class="dropdown-menu shadow animated--grow-in">
                              
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.View)).Result.Succeeded)
                            {
                                <a class="dropdown-item" asp-action="Details" asp-route-id="@item.ProblemId"><i class="fa-solid fa-circle-info"></i> Details</a>
                            }
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.Edit)).Result.Succeeded)
                            {
                                <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ProblemId"><i class="fas fa-pencil-alt"></i> Edit</a>
                            }
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.Delete)).Result.Succeeded)
                            {
                                <a class="dropdown-item" asp-action="Delete" asp-route-id="@item.ProblemId"><i class="fas fa-trash-alt"></i> Delete</a>
                            }                 
                    </div>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>
