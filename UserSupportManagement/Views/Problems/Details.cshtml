@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using UserSupportManagement.Constants
@*@model UserSupportManagement.Models.Problem*@
@model UserSupportManagement.Models.SolutionViewModel


@{
    ViewData["Title"] = "Details";
}
<div class="container pb-5">
    <h1 class="text-center mt-3">Details</h1>
    <hr />
    <div class="row justify-content-md-center">
        <div class="col col-md-2"></div>
        <div class="col col-md-8">
            @*<h4>Problem</h4>*@
            <dl class="row">
                <dt class="col-sm-5">
                    ProblemName
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.ProblemName)
                </dd>
                <dt class="col-sm-5">
                    ProblemType
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.ProblemTypeName)
                </dd>
                <dt class="col-sm-5">
                    StatusType
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.StatusTypeName)
                </dd>
                <dt class="col-sm-5">
                    ProblemDetails
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.ProblemDetails)
                </dd>
                <dt class="col-sm-5">
                    Solution Details
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.SolutionDetails)
                </dd>
                <dt class="col-sm-5">
                    CreatedBy
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.CreatedBy)
                </dd>
                <dt class="col-sm-5">
                    CreatedDate
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.CreatedDate)
                </dd>
                <dt class="col-sm-5">
                    ModifiedBy
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.ModifiedBy)
                </dd>
                <dt class="col-sm-5">
                    ModifiedDate
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.ModifiedDate)
                </dd>
                <dt class="col-sm-5">
                    IsActive
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.IsActive)
                </dd>
                <dt class="col-sm-5">
                    IsDeleted
                </dt>
                <dd class="col-sm-7">
                    @Html.DisplayFor(model => model.IsDeleted)
                </dd>
            </dl>
        </div>
        <div class="col col-md-2"></div>
    </div>
    <div class="row justify-content-md-center">
        <div class="col col-md-3"></div>
        <div class="col col-md-6">
            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.Edit)).Result.Succeeded)
            {
                <div class="d-grid gap-2">
                    <a class="btn btn-success mb-3" asp-action="Edit" asp-route-id="@Model.ProblemId"><i class="fas fa-pencil-alt"></i> Edit </a>
                </div>         
            }
            <div class="d-grid gap-2">
                <a class="btn btn-primary mb-3" asp-action="Index">Back to List</a>
            </div>
        </div>
        <div class="col col-md-3"></div>
    </div>
</div>

