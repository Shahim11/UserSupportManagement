@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using UserSupportManagement.Constants
@model IEnumerable<UserSupportManagement.Models.Problem>

@{
    ViewData["Title"] = "Index";
}

<div class="container pb-3">
    @*<h1>Index</h1>*@

    <h1 class="text-center mt-3">Problems List</h1>
    <br />
    
    <div class="createbutton">
        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.Create)).Result.Succeeded)
        {
            <a class="btn btn-primary mb-3 text-end" asp-action="Create"><i class="fa-solid fa-circle-plus"></i> Create New</a>
        }
    </div>
    
    @if (User.IsInRole("SuperAdmin")||User.IsInRole("Admin") ||User.IsInRole("Support") ||User.IsInRole("SupplyChain"))
    {
        <div class="createbutton">
            <a class="btn btn-primary mb-3 text-end" asp-action="Index">All</a>
        </div>
    }
    
    <table class="table">
        <thead>
            <tr>
                <th>
                    Problem Type
                </th>
                <th>
                    Status Type
                </th>
                <th>
                    Problem Name
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.ProblemDetails)
                </th>*@
                @if (User.IsInRole("SuperAdmin"))
                {
                    <th>
                        Created User
                    </th>
                }
                
                @*<th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifiedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifiedBy)
                </th>*@
                <th style="width:10%">Actions</th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProblemType.ProblemTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StatusType.StatusTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProblemName)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.ProblemDetails)
                </td>*@
                @if (User.IsInRole("SuperAdmin"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                }
                @*<td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedBy)
                </td>*@
                <td class="text-right">
                    <div class="dropdown">
                        <button class="btn dropdown-toggle" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
                            Action
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.View)).Result.Succeeded)
                                                                            {
                                                                                <li><button class="dropdown-item" type="button">
                                                                                <a class="dropdown-item" asp-action="Details" asp-route-id="@item.ProblemId"><i class="fa-solid fa-circle-info"></i> Details</a>
                                                                                </button></li>
                            }
                            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.Edit)).Result.Succeeded)
                                                                            {
                                                                                <li><button class="dropdown-item" type="button">
                                                                                <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ProblemId"><i class="fas fa-pencil-alt"></i> Edit</a>
                                                                                </button></li>
                            }
                            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Problems.Delete)).Result.Succeeded)
                                                                            {
                                                                                <li><button class="dropdown-item" type="button">
                                                                                <a class="dropdown-item" asp-action="Delete" asp-route-id="@item.ProblemId"><i class="fas fa-trash-alt"></i> Delete</a>
                                                                                </button></li>
                            }
                        </ul>
                    </div>
                    
                </td>
            </tr>
    }
        </tbody>
    </table>
</div>


