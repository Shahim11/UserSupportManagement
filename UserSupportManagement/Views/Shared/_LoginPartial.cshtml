@using Microsoft.AspNetCore.Identity
@using UserSupportManagement.Constants
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

@{
     var user = await UserManager.GetUserAsync(User);
}

@*@{
    var role = await RoleManager.GetRoleNameAsync(Role);
}*@

<div class="d-flex">
    @*<input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
    <button class="btn btn-outline-success" type="submit">Search</button>*@
    <ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{

    <li class="nav-item">
        @*<a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @user.EmployeeName!</a>*@
        <a  class="nav-link " asp-area="" asp-page="" title="Manage">Hello @user.EmployeeName!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    @*https://localhost:44320/Identity/Account/Register*@
    @*<li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>*@
    @*<li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>*@
}
</ul>
</div>


